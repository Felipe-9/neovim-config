-- local ls = require("luasnip")

-- local s = ls.snippet -- build snippets
-- -- local t = ls.text_node -- insert text
-- local i = ls.insert_node -- user input
--
-- -- local extras = require("luasnip.extras")
-- -- local rep = extras.rep                         -- repeat for multiple cursors
-- local fmt = require("luasnip.extras.fmt").fmta -- formatting with [[]] and <> delimiters
--
-- local c = ls.choice_node -- multiple options
-- -- local f = ls.function_node -- insert lua functions
--
-- -- local d = ls.dynamic_node -- functions surround snippets
-- -- local sn = ls.snippet.node -- insert snippets withing functions (d)

return {
  require("snippets.data.latex.constants"),
  require("snippets.data.latex.math"),
  require("snippets.data.latex.mysnippets"),
  require("snippets.data.latex.tikz-pfg"),
  -- FCT
  require("snippets.data.latex.FCT.AM2C"),
  require("snippets.data.latex.FCT.AM3C"),
  require("snippets.data.latex.FCT.CMA"),
  require("snippets.data.latex.FCT.CNA"),
  require("snippets.data.latex.FCT.EB"),
  require("snippets.data.latex.FCT.FTII"),
  require("snippets.data.latex.FCT.OSF"),
  require("snippets.data.latex.FCT.QF"),
  require("snippets.data.latex.FCT.QFA"),
  require("snippets.data.latex.FCT.TEQB"),
  -- Templates
  require("snippets.data.latex.templates.mainfile"),
  require("snippets.data.latex.templates.subfile"),
}
